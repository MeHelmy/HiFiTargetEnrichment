import re
from pathlib import Path

## prefix every task command with:
# set -o pipefail  # trace ERR through pipes
# umask 002  # group write permissions
# export TMPDIR={config['tmpdir']}  # configure temp directory
# export SINGULARITY_TMPDIR={config['tmpdir']}  # configure temp directory
shell.prefix(
    f"set -o pipefail; umask 002; export TMPDIR={config['tmpdir']}; export SINGULARITY_TMPDIR={config['tmpdir']}; "
)

batch   = config[ "batch" ]
ref     = config[ "ref" ][ "shortname" ]
readDir = config[ "readDir" ]

# build "sample2reads" map from input dir
# for target building.
# sample name is file name (remove .bam only)
sample2reads = { 
                 bamfile.stem : str( bamfile )
                for bamfile in Path( readDir ).glob('*.bam') 
               }
# point the sample2barcode variable at the map
sample2barcode = sample2reads

print(f"Processing batch {batch} with reference {ref}.")

targets = []

include: "rules/slinputs.smk"
include: "rules/common.smk"
include: "rules/deepvariant.smk"
include: "rules/whatshap.smk"
include: "rules/glnexus.smk"
include: "rules/hsmetrics.smk"

# DV
targets.extend(
    [
        f"batches/{batch}/{sample}/deepvariant/{sample}.{ref}.deepvariant.{suffix}"
        for suffix in [
            "vcf.gz",
            "vcf.gz.tbi",
            "g.vcf.gz",
            "g.vcf.gz.tbi",
            "visual_report.html",
            "vcf.stats.txt",
        ]
        for sample in sample2reads.keys()
    ]
)
# WH
targets.extend(
    [
        f"batches/{batch}/{sample}/whatshap/{sample}.{ref}.deepvariant.{suffix}"
        for suffix in [
            "phased.vcf.gz",
            "phased.vcf.gz.tbi",
            "phased.gtf",
            "phased.tsv",
            "phased.blocklist",
            "haplotagged.bam",
            "haplotagged.bam.bai",
        ]
        for sample in sample2reads.keys()
    ]
)

# gVCF/cohort
targets.extend(
        [
         f"batches/{batch}/whatshap_cohort/{batch}.{ref}.deepvariant.glnexus.phased.vcf.gz",
         f"batches/{batch}/whatshap_cohort/{batch}.{ref}.deepvariant.glnexus.phased.gtf",
         f"batches/{batch}/whatshap_cohort/{batch}.{ref}.deepvariant.glnexus.phased.tsv",
         f"batches/{batch}/whatshap_cohort/{batch}.{ref}.deepvariant.glnexus.phased.blocklist"
        ]
)

# QC extras
if config['QC']['runQC']:
    include: "rules/qc_cov.smk"

ruleorder: deepvariant_postprocess_variants > tabix_vcf

rule all:
    input:
        targets,
